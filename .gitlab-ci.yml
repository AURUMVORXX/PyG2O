variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
 - build
 - release

.build:
  stage: build
  when: manual
  script:
    - cmake . --preset ${SYSTEM}-${ARCHITECTURE}-Release
    - cmake --build --preset ${SYSTEM}-${ARCHITECTURE}-Release
    - cp out/build/${SYSTEM}-${ARCHITECTURE}-Release/${CI_PROJECT_NAME}.${ARCHITECTURE}${SHARED_LIB_SUFFIX} ./
  artifacts:
    name: ${CI_PROJECT_NAME}
    paths:
      - ${CI_PROJECT_NAME}.${ARCHITECTURE}${SHARED_LIB_SUFFIX}
    expire_in: never
    reports:
        dotenv: job.env

build:windows:
  extends: .build
  tags: [windows]
  variables:
    SYSTEM: "Windows"
    SHARED_LIB_SUFFIX: ".dll"
  before_script: |
    function loadenv($bat_file)
    {
      $env_file = New-TemporaryFile
      cmd /c " `"$bat_file`" $args && set > `"$env_file`" "

      foreach($line in Get-Content "$env_file") 
      {
        if($line -match "^(.*?)=(.*)$")
        {
          Set-Content "env:\$($matches[1])" $matches[2]
        }
      }

      Remove-Item "$env_file"
    }

    loadenv "C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Auxiliary\Build\vcvarsall.bat" ${ARCHITECTURE}
  after_script:
    - Add-Content -Path job.env -Value "windows_${ARCHITECTURE}_JOB_ID=${CI_JOB_ID}"
  parallel:
    matrix:
      - ARCHITECTURE: [x86, x64]

build:linux:
  extends: .build
  image: registry.gitlab.com/gothicmultiplayerteam/buildimage:ubuntu-18.04
  variables:
    SYSTEM: "Linux"
    SHARED_LIB_SUFFIX: ".so"
  after_script:
    - echo "linux_${ARCHITECTURE}_JOB_ID=${CI_JOB_ID}" >> job.env
  parallel:
    matrix:
      - ARCHITECTURE: [x64, arm, arm64]
    
release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  when: manual
  needs: [build:linux, build:windows]
  variables:
    TAG: '0.1'
  script:
    - echo "Create Release $TAG"
  release:
    tag_name: '$TAG'
    description: "./CHANGELOG.md"
    assets:
      links:
        - name: "${CI_PROJECT_NAME}.x86.dll"
          url: "${CI_PROJECT_URL}/-/jobs/${windows_x86_JOB_ID}/artifacts/download"
          link_type: "package"
        - name: "${CI_PROJECT_NAME}.x64.dll"
          url: "${CI_PROJECT_URL}/-/jobs/${windows_x64_JOB_ID}/artifacts/download"
          link_type: "package"
        - name: "${CI_PROJECT_NAME}.x64.so"
          url: "${CI_PROJECT_URL}/-/jobs/${linux_x64_JOB_ID}/artifacts/download"
          link_type: "package"
        - name: "${CI_PROJECT_NAME}.arm.so"
          url: "${CI_PROJECT_URL}/-/jobs/${linux_arm_JOB_ID}/artifacts/download"
          link_type: "package"
        - name: "${CI_PROJECT_NAME}.arm64.so"
          url: "${CI_PROJECT_URL}/-/jobs/${linux_arm64_JOB_ID}/artifacts/download"
          link_type: "package"